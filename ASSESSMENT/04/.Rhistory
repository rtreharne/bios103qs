data <- read.csv("pantheria_100.csv")
most_common_family <- names(which.max(table(data$Family)))
num_rows <- sum(data$Family == most_common_family)
num_rows
# Read the CSV file
data <- read.csv("pantheria_100.csv")
# Filter out rows with BasalMetRate_mLO2hr value of -999
data_filtered <- data[data$BasalMetRate_mLO2hr != -999, ]
# Count the number of rows for each unique Family value and sort in descending order
family_counts <- sort(table(data_filtered$Family), decreasing = TRUE)
# Get the top 5 families
top_5_families <- names(head(family_counts, 5))
# Filter the data for the top 5 families
top_5_data <- data_filtered[data_filtered$Family %in% top_5_families, ]
# Initialize an empty data frame for the summary
summary_table <- data.frame(
Family = character(),
Mean = numeric(),
Median = numeric(),
Max = numeric(),
Min = numeric(),
SD = numeric(),
Count = numeric(),
stringsAsFactors = FALSE
)
# Calculate summary statistics for each family
for (family in top_5_families) {
# Select data for the current family
family_data <- top_5_data[top_5_data$Family == family, "BasalMetRate_mLO2hr"]
# Calculate statistics
family_mean <- round(mean(family_data, na.rm = TRUE), 1)
family_median <- round(median(family_data, na.rm = TRUE), 1)
family_max <- round(max(family_data, na.rm = TRUE), 1)
family_min <- round(min(family_data, na.rm = TRUE), 1)
family_sd <- round(sd(family_data, na.rm = TRUE), 1)
family_count <- length(family_data)
# Add the results to the summary table
summary_table <- rbind(summary_table, data.frame(
Family = family,
Mean = family_mean,
Median = family_median,
Max = family_max,
Min = family_min,
SD = family_sd,
Count = family_count
))
}
# Print the summary table
print(summary_table)
# Read the CSV file
data <- read.csv("pantheria_100.csv")
# Filter out rows with BasalMetRate_mLO2hr value of -999
data_filtered <- data[data$AdultBodyMass_g != -999, ]
orders <- unique(data_filtered$Order)
orders
# Initialize an empty data frame for the summary
summary_table <- data.frame(
Order = character(),
Mean = numeric(),
Median = numeric(),
Max = numeric(),
Min = numeric(),
SD = numeric(),
Count = numeric(),
stringsAsFactors = FALSE
)
# Calculate summary statistics for each family
for (order in orders) {
# Select data for the current family
order_data <- data_filtered[data_filtered$Order == order, "AdultBodyMass_g"]
# Calculate statistics
order_mean <- round(mean(order_data, na.rm = TRUE), 1)
order_median <- round(median(order_data, na.rm = TRUE), 1)
order_max <- round(max(order_data, na.rm = TRUE), 1)
order_min <- round(min(order_data, na.rm = TRUE), 1)
order_sd <- round(sd(order_data, na.rm = TRUE), 1)
order_count <- length(order_data)
# Add the results to the summary table
summary_table <- rbind(summary_table, data.frame(
Order = order,
Mean = order_mean,
Median = order_median,
Max = order_max,
Min = order_min,
SD = order_sd,
Count = order_count
))
}
# order the summary_table by median descending
summary_table <- summary_table[order(summary_table$Order), ]
# Print the summary table
print(summary_table)
View(summary_table)
data <- read.csv("pantheria_105.csv")
data <- read.csv("pantheria_105.csv")
most_common_family <- names(which.max(table(data$Family)))
num_rows <- sum(data$Family == most_common_family)
num_rows
data <- read.csv("pantheria_100.csv")
subset = data[data$AdultBodyMass_g != -999]
source("~/bios103qs/ASSESSMENT/04/summary.R")
source("~/bios103qs/ASSESSMENT/04/summary.R")
source("~/bios103qs/ASSESSMENT/04/summary.R")
source("~/bios103qs/ASSESSMENT/04/summary.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
# Write to CSV and print
#write.csv(summary_table, "summary_table.csv", row.names = FALSE)
print(summary_table)
source("C:/Users/treharne/Documents/bios103qs/ASSESSMENT/04/summary_again.R")
source("C:/Users/treharne/Documents/bios103qs/ASSESSMENT/04/summary_again.R")
source("C:/Users/treharne/Documents/bios103qs/ASSESSMENT/04/summary_again.R")
source("C:/Users/treharne/Documents/bios103qs/ASSESSMENT/04/summary_again.R")
source("C:/Users/treharne/Documents/bios103qs/ASSESSMENT/04/summary_again.R")
source("C:/Users/treharne/Documents/bios103qs/ASSESSMENT/04/summary_again.R")
View(summary_table)
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
View(summary_table)
source("C:/Users/treharne/Documents/bios103qs/ASSESSMENT/04/summary_again.R")
View(data_filtered)
source("C:/Users/treharne/Documents/bios103qs/ASSESSMENT/04/summary_again.R")
View(data)
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("C:/Users/treharne/Documents/bios103qs/ASSESSMENT/04/summary_again.R")
source("C:/Users/treharne/Documents/bios103qs/ASSESSMENT/04/summary_again.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
data_filtered <- data[data["AdultBodyMass_g"] != -999]
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
data_filtered <- data[data$AdultBodyMass_g != -999]
# Read the CSV and filter out invalid rows
data <- read.csv("pantheria_200.csv")
# Read the CSV and filter out invalid rows
data <- read.csv("pantheria_200.csv")
# Read the CSV and filter out invalid rows
data <- read.csv("pantheria_200.csv")
# Read the CSV and filter out invalid rows
data <- read.csv("pantheria_200.csv")
data_filtered <- data[data$AdultBodyMass_g != -999]
View(data)
data_filtered <- data[data$AdultBodyMass_g != -999, ]
# Calculate summary statistics for each Order
summary_table <- aggregate(AdultBodyMass_g ~ Order, data_filtered, function(x)
c(Mean = mean(x), Median = median(x), Max = max(x), Min = min(x), SD = sd(x), Count = length(x)))
# Convert the list columns to individual columns
summary_table <- do.call(data.frame, summary_table)
# Rename the columns
colnames(summary_table) <- c("Order", "Mean", "Median", "Max", "Min", "Std. Dev.", "Count")
# Format all numeric values to 1 decimal place (except Count)
summary_table[, 2:6] <- round(summary_table[, 2:6], 1)
# Sort by Count in decreasing order
summary_table <- summary_table[order(-summary_table$Count), ]
View(summary_table)
# Write to CSV and print
write.csv(summary_table, "summary_table.csv", row.names = FALSE)
print(summary_table)
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
View(summary_table)
View(data_filtered)
View(data)
# Read the CSV and filter out invalid rows
data <- read.csv("pantheria_200.csv")
data_filtered <- data[data$BasalMetRate_mLO2hr] != -999, ]
data_filtered <- data[data$BasalMetRate_mLO2hr != -999, ]
# Calculate summary statistics for each Order
summary_table <- aggregate(AdultBodyMass_g ~ Order, data_filtered, function(x)
c(Mean = mean(x), Median = median(x), Max = max(x), Min = min(x), SD = sd(x), Count = length(x)))
# Convert the list columns to individual columns
summary_table <- do.call(data.frame, summary_table)
# Rename the columns
colnames(summary_table) <- c("Order", "Mean", "Median", "Max", "Min", "Std. Dev.", "Count")
# Format all numeric values to 1 decimal place (except Count)
summary_table[, 2:6] <- round(summary_table[, 2:6], 1)
# Sort by Count in decreasing order
summary_table <- summary_table[order(-summary_table$Count), ]
# Write to CSV and print
write.csv(summary_table, "summary_table.csv", row.names = FALSE)
print(summary_table)
data_filtered <- data[data$NeonateBodyMass_g != -999, ]
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
View(summary_table)
source("~/bios103qs/ASSESSMENT/04/summary_order.R")
View(summary_table)
data <- read.csv("pantheria_999.csv")
subset <- data[[data$Order, data$AdultBodyMass_g, data$BasalMetRate_mLO2hr]]
View(data)
subset <- data[, c["Order"]]
subset <- data[, c("Order")]
colnames(data)
subset <- data[, c("Order", "AdultBodyMass_g")]
View(subset)
slice <- data[, c("Order", "AdultBodyMass_g", "BasalMetRate_mLO2hr")]
View(slice)
subset <- data[data$Order == "Rodentia"]
subset <- data[data$Order == "Rodentia", ]
View(subset)
View(slice)
View(subset)
subset <- slice[slice$Order == "Rodentia", ]
View(subset)
filtered <- subset[subset$AdultBodyMass_g >=0 & subset$BasalMetRate_mLO2hr >=0,]
View(filtered)
plot(filtered$AdultBodyMass_g, filtered$BasalMetRate_mLO2hr)
plot(filtered$AdultBodyMass_g, filtered$BasalMetRate_mLO2hr,
log = "xy",
xlab = "Adult Body Mass (g)",
ylab = "Basal Metabolic Rate (mL O2/hr)",
main = "Log-Log Plot of Adult Body Mass vs Basal Metabolic Rate")
plot(filtered$AdultBodyMass_g, filtered$BasalMetRate_mLO2hr,
log = "xy",
xlab = "Adult Body Mass (g)",
ylab = "Basal Metabolic Rate (mL O2/hr)",
main = "")
plot(filtered$AdultBodyMass_g, filtered$BasalMetRate_mLO2hr,
log = "xy",
xlab = "Adult Body Mass (g)",
ylab = "Basal Metabolic Rate (mLO$_{2}$/hr)",
main = "")
plot(filtered$AdultBodyMass_g, filtered$BasalMetRate_mLO2hr,
log = "xy",
xlab = "Adult Body Mass (g)",
ylab = expression(Basal~Metabolic~Rate~(mL~O[2]/hr)),
main = "")
plot(filtered$AdultBodyMass_g, filtered$BasalMetRate_mLO2hr,
log = "xy",
xlab = "Adult Body Mass (g)",
ylab = "Basal Metabolic Rate (mLO2/hr)",
main = "")
subset <- slice[slice$Order == "Rodentia" & subset$AdultBodyMass_g >=0 & subset$BasalMetRate_mLO2hr >=0 , ]
View(subset)
subset <- slice[(slice$Order == "Rodentia" & subset$AdultBodyMass_g >=0 & subset$BasalMetRate_mLO2hr >=0) , ]
View(subset)
subset <- slice[slice$Order == "Rodentia" & slice$AdultBodyMass_g >=0 & slice$BasalMetRate_mLO2hr >=0 , ]
View(subset)
plot(subset$AdultBodyMass_g, subset$BasalMetRate_mLO2hr,
log = "xy",
xlab = "Adult Body Mass (g)",
ylab = "Basal Metabolic Rate (mLO2/hr)",
main = "")
subset <- slice[slice$Order == "Rodentia", ]# & slice$AdultBodyMass_g >=0 & slice$BasalMetRate_mLO2hr >=0 , ]
plot($AdultBodyMass_g, subset$BasalMetRate_mLO2hr,
plot($AdultBodyMass_g, subset$BasalMetRate_mLO2hr,
subset <- slice[slice$Order == "Rodentia" & slice$AdultBodyMass_g >=0 & slice$BasalMetRate_mLO2hr >=0 , ]
plot($AdultBodyMass_g, subset$BasalMetRate_mLO2hr,
data <- read.csv("pantheria_999.csv")
function (x, ...)
colnames(data)
slice <- data[, c("Order", "AdultBodyMass_g", "BasalMetRate_mLO2hr")]
subset <- slice[slice$Order == "Rodentia" & slice$AdultBodyMass_g >=0 & slice$BasalMetRate_mLO2hr >=0 , ]
plot(subset$AdultBodyMass_g, subset$BasalMetRate_mLO2hr,
xlab = "Adult Body Mass (g)",
ylab = "Basal Metabolic Rate (mLO2/hr)",
main = "")
colnames(data)
slice <- data[1:1000, 1:13]#, c("Order", "AdultBodyMass_g", "BasalMetRate_mLO2hr")]
View(slice)
View(slice)
View(subset)
subset <- slice[slice$AdultBodyMass_g >=0 & slice$BasalMetRate_mLO2hr >=0, ]
plot(subset$AdultBodyMass_g, subset$BasalMetRate_mLO2hr,
xlab = "Adult Body Mass (g)",
ylab = "Basal Metabolic Rate (mLO2/hr)",
main = "")
View(slice)
View(subset)
View(slice)
slice <- data[, c("Order", "AdultBodyMass_g", "BasalMetRate_mLO2hr")]
subset <- slice[slice$AdultBodyMass_g >=0 & slice$BasalMetRate_mLO2hr >=0, ]
plot(subset$AdultBodyMass_g, subset$BasalMetRate_mLO2hr,
xlab = "Adult Body Mass (g)",
ylab = "Basal Metabolic Rate (mLO2/hr)",
main = "")
plot(subset$AdultBodyMass_g, subset$BasalMetRate_mLO2hr,
log="xy",
xlab = "Adult Body Mass (g)",
ylab = "Basal Metabolic Rate (mLO2/hr)",
main = "")
# Add a legend
legend("topright",                       # Position of the legend
legend = unique(subset$Order),    # Labels for the legend
col = colors,                      # Colors for the legend
pch = 19,                          # Point type in legend
title = "Order")                   # Title of the legend
source("C:/Users/treharne/Documents/bios103qs/ASSESSMENT/04/subset_filter.r")
source("C:/Users/treharne/Documents/bios103qs/ASSESSMENT/04/subset_filter.r")
# Create a color palette for different Orders
colors <- rainbow(length(unique(subset$Order)))
# Create a plot
plot(subset$AdultBodyMass_g, subset$BasalMetRate_mLO2hr,
log = "xy",
xlab = "Adult Body Mass (g)",
ylab = "Basal Metabolic Rate (mLO2/hr)",
main = "",
pch = 19,  # Point type
col = colors[as.numeric(factor(subset$Order))]  # Color by Order
)
# Add a legend
legend("topright",                       # Position of the legend
legend = unique(subset$Order),    # Labels for the legend
col = colors,                      # Colors for the legend
pch = 19,                          # Point type in legend
title = "Order")                   # Title of the legend
source("C:/Users/treharne/Documents/bios103qs/ASSESSMENT/04/subset_filter.r")
source("C:/Users/treharne/Documents/bios103qs/ASSESSMENT/04/subset_filter.r")
source("C:/Users/treharne/Documents/bios103qs/ASSESSMENT/04/subset_filter.r")
source("C:/Users/treharne/Documents/bios103qs/ASSESSMENT/04/subset_filter.r")
plot(subset$AdultBodyMass_g, subset$BasalMetRate_mLO2hr,
log="xy",
xlab = "Adult Body Mass (g)",
ylab = "Basal Metabolic Rate (mLO2/hr)",
main = "")
source("~/bios103qs/ASSESSMENT/04/subset_filter.r")
plot(subset$AdultBodyMass_g, subset$BasalMetRate_mLO2hr,
log="xy",
xlab = "Adult Body Mass (g)",
ylab = "Basal Metabolic Rate (mLO2/hr)",
main = "")
plot(subset$AdultBodyMass_g, subset$BasalMetRate_mLO2hr,
log = "xy",
xlab = "Adult Body Mass (g)",
ylab = "Basal Metabolic Rate (mLO2/hr)",
main = "",
axes = FALSE)  # Disable default axes
# Add custom axes
# X-axis
axis(1, at = c(1, 10, 100, 1000, 10000), labels = c("1", "10", "100", "1,000", "10,000"))
# Y-axis
axis(2, at = c(1, 10, 100, 1000), labels = c("1", "10", "100", "1,000"))
plot(subset$AdultBodyMass_g, subset$BasalMetRate_mLO2hr,
log="xy",
xlab = "Adult Body Mass (g)",
ylab = "Basal Metabolic Rate (mLO2/hr)",
main = "")
source("~/bios103qs/ASSESSMENT/04/summary.R")
source("~/bios103qs/ASSESSMENT/04/summary.R")
source("~/bios103qs/ASSESSMENT/04/summary.R")
source("~/bios103qs/ASSESSMENT/04/summary.R")
source("~/bios103qs/ASSESSMENT/04/summary.R")
source("~/bios103qs/ASSESSMENT/04/summary.R")
